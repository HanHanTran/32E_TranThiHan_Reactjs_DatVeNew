{"ast":null,"code":"// import React, { Component } from 'react'\n// import {connect} from 'react-redux';\n// class HangGhe extends Component {\n//   renderGhe = () =>{\n//     return this.props.hangGhe.danhSachGhe.map((ghe,index)=>{\n//       // if (index === 0) {\n//       //   return <span className=\"rowNumber\">{ghe.soGhe}</span>\n//       // }\n//       let cssGheDaDat = '';\n//       let disabled = false;\n//       if(ghe.daDat){\n//         cssGheDaDat = 'gheDuocChon';\n//         disabled = true;\n//       }\n//       // let cssGheDaDat = '';\n//       let indexGheDangDat = this.props.danhSachGheDangDat.findIndex\n//       (gheDangDat => gheDangDat...soGhe === ghe);\n//       if (indexGheDangDat !== -1) {\n//         cssGheDaDat = 'gheDangChon';\n//       }\n//       return <button onClick={() =>{\n//         this.props.datGhe(ghe)\n//       }} className={`ghe ${cssGheDaDat} ${cssGheDaDat}`}key={index} disabled={disabled}>\n//         {ghe.soGhe}\n//       </button>\n//     })\n//   }\n//   renderSoHangGhe =()=>{\n//     return this.props.hangGhe.danhSachGhe.map((hang,index)=>{\n//       return <button className=\"rowNumber\">\n//         {hang.soGhe}\n//       </button>\n//     })\n//   }\n//   renderHangGhe =()=>{\n//     if(this.props.soHangGhe === 0){\n//      return <div>\n//         {this.props.hangGhe.hang} {this.renderSoHangGhe()}\n//      </div>\n//     }else{\n//       return <div className=\"\">\n//         {this.props.hangGhe.hang} {this.renderGhe()}\n//       </div>\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className='text-left mt-2'>\n//         {this.renderHangGhe()}\n//       </div>\n//     )\n//   }\n// }\n// const mapStateToProps = state =>{\n//   return {\n//     danhSachGheDangDat: state.BaiTapDatVeReducer.danhSachGheDangDat\n//   }\n// }\n// const mapDispatchToProps = (disabled) =>{\n//   return{\n//     datGhe: (ghe) =>{\n//       disabled({\n//         type: 'DAT_GHE',\n//         ghe\n//       })\n//     }\n//   }\n// }\n// export default connect (mapStateToProps,mapDispatchToProps)(HangGhe);","map":{"version":3,"names":[],"sources":["/Users/tranthihan/Documents/BT_CYBERSOFT/btdatve/datve/src/component/BTDatVe/HangGhe.jsx"],"sourcesContent":["// import React, { Component } from 'react'\n// import {connect} from 'react-redux';\n// class HangGhe extends Component {\n//   renderGhe = () =>{\n//     return this.props.hangGhe.danhSachGhe.map((ghe,index)=>{\n//       // if (index === 0) {\n//       //   return <span className=\"rowNumber\">{ghe.soGhe}</span>\n//       // }\n//       let cssGheDaDat = '';\n//       let disabled = false;\n\n//       if(ghe.daDat){\n//         cssGheDaDat = 'gheDuocChon';\n//         disabled = true;\n//       }\n//       // let cssGheDaDat = '';\n//       let indexGheDangDat = this.props.danhSachGheDangDat.findIndex\n      \n//       (gheDangDat => gheDangDat...soGhe === ghe);\n//       if (indexGheDangDat !== -1) {\n//         cssGheDaDat = 'gheDangChon';\n//       }\n\n//       return <button onClick={() =>{\n//         this.props.datGhe(ghe)\n//       }} className={`ghe ${cssGheDaDat} ${cssGheDaDat}`}key={index} disabled={disabled}>\n//         {ghe.soGhe}\n//       </button>\n//     })\n//   }\n\n//   renderSoHangGhe =()=>{\n//     return this.props.hangGhe.danhSachGhe.map((hang,index)=>{\n//       return <button className=\"rowNumber\">\n//         {hang.soGhe}\n//       </button>\n      \n//     })\n//   }\n//   renderHangGhe =()=>{\n//     if(this.props.soHangGhe === 0){\n//      return <div>\n//         {this.props.hangGhe.hang} {this.renderSoHangGhe()}\n\n//      </div>\n//     }else{\n//       return <div className=\"\">\n//         {this.props.hangGhe.hang} {this.renderGhe()}\n//       </div>\n//     }\n  \n//   }\n//   render() {\n//     return (\n//       <div className='text-left mt-2'>\n//         {this.renderHangGhe()}\n//       </div>\n//     )\n//   }\n// }\n// const mapStateToProps = state =>{\n//   return {\n\n//     danhSachGheDangDat: state.BaiTapDatVeReducer.danhSachGheDangDat\n//   }\n\n  \n// }\n// const mapDispatchToProps = (disabled) =>{\n//   return{\n//     datGhe: (ghe) =>{\n//       disabled({\n//         type: 'DAT_GHE',\n//         ghe\n\n//       })\n//     }\n//   }\n// }\n// export default connect (mapStateToProps,mapDispatchToProps)(HangGhe);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}