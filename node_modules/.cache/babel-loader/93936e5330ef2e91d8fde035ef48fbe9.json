{"ast":null,"code":"const stateDefault = {\n  danhSachGheDangDat: []\n};\n\nconst BaiTapDatVeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stateDefault;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DAT_GHE':\n      {\n        let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat];\n        let index = danhSachGheDangDatUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.ghe.soGhe);\n\n        if (index !== -1) {\n          danhSachGheDangDatUpdate.splice;\n        }\n\n        return { ...state\n        };\n      }\n  }\n};\n\n_c = BaiTapDatVeReducer;\nexport default BaiTapDatVeReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaiTapDatVeReducer\");","map":{"version":3,"names":["stateDefault","danhSachGheDangDat","BaiTapDatVeReducer","state","action","type","danhSachGheDangDatUpdate","index","findIndex","gheDangDat","soGhe","ghe","splice"],"sources":["/Users/tranthihan/Documents/BT_CYBERSOFT/btdatve/datve/src/redux/BaiTapDatVeReducer.js"],"sourcesContent":["const stateDefault ={\n    danhSachGheDangDat: [\n\n    ]\n}\nconst BaiTapDatVeReducer = (state = stateDefault, action ) => {\n switch (action.type) {\n    case 'DAT_GHE':{\n        let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat]\n        let index = danhSachGheDangDatUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.ghe.soGhe);\n        if (index !== -1) {\n            danhSachGheDangDatUpdate.splice\n        }\n        return {...state}\n\n    }\n }\n}\nexport default BaiTapDatVeReducer"],"mappings":"AAAA,MAAMA,YAAY,GAAE;EAChBC,kBAAkB,EAAE;AADJ,CAApB;;AAKA,MAAMC,kBAAkB,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BH,YAA0B;EAAA,IAAZI,MAAY;;EAC7D,QAAQA,MAAM,CAACC,IAAf;IACG,KAAK,SAAL;MAAe;QACX,IAAIC,wBAAwB,GAAG,CAAC,GAAGH,KAAK,CAACF,kBAAV,CAA/B;QACA,IAAIM,KAAK,GAAGD,wBAAwB,CAACE,SAAzB,CAAmCC,UAAU,IAAIA,UAAU,CAACC,KAAX,KAAqBN,MAAM,CAACO,GAAP,CAAWD,KAAjF,CAAZ;;QACA,IAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;UACdD,wBAAwB,CAACM,MAAzB;QACH;;QACD,OAAO,EAAC,GAAGT;QAAJ,CAAP;MAEH;EATJ;AAWA,CAZD;;KAAMD,kB;AAaN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}