{"ast":null,"code":"const stateDefault = {\n  danhsachGheDangDat: []\n};\nexport const btDatVe = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stateDefault;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DAT_GHE':\n      {\n        let danhsachGheUpdate = [...state.danhsachGheDangDat];\n        let index = danhsachGheUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.ghe.soGhe);\n\n        if (index !== -1) {\n          // ghế dang đặt đã có trong mảng =>remove\n          danhsachGheUpdate.splice(index, 1);\n        } else {\n          danhsachGheUpdate.push(action.ghe);\n        }\n\n        state.danhsachGheDangDat = danhsachGheUpdate;\n        return { ...state\n        };\n      }\n\n    case 'HUY_GHE':\n      {\n        let danhsachGheUpdate = [...state.danhsachGheDangDat];\n        let index = danhsachGheUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.ghe.soGhe);\n\n        if (index !== -1) {\n          // ghế dang đặt đã có trong mảng =>remove\n          danhsachGheUpdate.splice(index, 1);\n        }\n\n        state.danhsachGheDangDat = danhsachGheUpdate;\n        return { ...state\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"names":["stateDefault","danhsachGheDangDat","btDatVe","state","action","type","danhsachGheUpdate","index","findIndex","gheDangDat","soGhe","ghe","splice","push"],"sources":["/Users/tranthihan/Documents/BT_CYBERSOFT/btdatve/datve/src/store/reducers/btDatVe.js"],"sourcesContent":["const stateDefault = {\n   danhsachGheDangDat:[\n \n   ]\n}\nexport const btDatVe = (state= stateDefault, action) => {\n   switch (action.type) {\n      case 'DAT_GHE':{\n         let danhsachGheUpdate = [...state.danhsachGheDangDat];\n         let index = danhsachGheUpdate.findIndex(gheDangDat => gheDangDat.soGhe ===action.ghe.soGhe);\n         if(index !== -1) { // ghế dang đặt đã có trong mảng =>remove\n            danhsachGheUpdate.splice(index,1);\n         }else{\n            danhsachGheUpdate.push(action.ghe);\n         }\n        state.danhsachGheDangDat = danhsachGheUpdate;\n         return {...state}\n      }\n      case 'HUY_GHE':{\n         let danhsachGheUpdate = [...state.danhsachGheDangDat];\n         let index = danhsachGheUpdate.findIndex(gheDangDat => gheDangDat.soGhe ===action.ghe.soGhe);\n         if(index !== -1) { // ghế dang đặt đã có trong mảng =>remove\n            danhsachGheUpdate.splice(index,1);\n         }\n         state.danhsachGheDangDat=danhsachGheUpdate;\n         return {...state};\n      }\n      default:\n          return {...state}\n   }\n}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EAClBC,kBAAkB,EAAC;AADD,CAArB;AAKA,OAAO,MAAMC,OAAO,GAAG,YAAiC;EAAA,IAAhCC,KAAgC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACG,KAAK,SAAL;MAAe;QACZ,IAAIC,iBAAiB,GAAG,CAAC,GAAGH,KAAK,CAACF,kBAAV,CAAxB;QACA,IAAIM,KAAK,GAAGD,iBAAiB,CAACE,SAAlB,CAA4BC,UAAU,IAAIA,UAAU,CAACC,KAAX,KAAoBN,MAAM,CAACO,GAAP,CAAWD,KAAzE,CAAZ;;QACA,IAAGH,KAAK,KAAK,CAAC,CAAd,EAAiB;UAAE;UAChBD,iBAAiB,CAACM,MAAlB,CAAyBL,KAAzB,EAA+B,CAA/B;QACF,CAFD,MAEK;UACFD,iBAAiB,CAACO,IAAlB,CAAuBT,MAAM,CAACO,GAA9B;QACF;;QACFR,KAAK,CAACF,kBAAN,GAA2BK,iBAA3B;QACC,OAAO,EAAC,GAAGH;QAAJ,CAAP;MACF;;IACD,KAAK,SAAL;MAAe;QACZ,IAAIG,iBAAiB,GAAG,CAAC,GAAGH,KAAK,CAACF,kBAAV,CAAxB;QACA,IAAIM,KAAK,GAAGD,iBAAiB,CAACE,SAAlB,CAA4BC,UAAU,IAAIA,UAAU,CAACC,KAAX,KAAoBN,MAAM,CAACO,GAAP,CAAWD,KAAzE,CAAZ;;QACA,IAAGH,KAAK,KAAK,CAAC,CAAd,EAAiB;UAAE;UAChBD,iBAAiB,CAACM,MAAlB,CAAyBL,KAAzB,EAA+B,CAA/B;QACF;;QACDJ,KAAK,CAACF,kBAAN,GAAyBK,iBAAzB;QACA,OAAO,EAAC,GAAGH;QAAJ,CAAP;MACF;;IACD;MACI,OAAO,EAAC,GAAGA;MAAJ,CAAP;EAtBP;AAwBF,CAzBM"},"metadata":{},"sourceType":"module"}